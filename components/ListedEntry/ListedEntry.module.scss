@import '/styles/common/mixins';

.entry {
  --entry-padding-default: 5rem;
  --entry-margin-top: calc(var(--entry-padding-default) * 1.2);
  --entry-padding-left: calc(var(--entry-padding-default) * 1.4);

  &:first-of-type {
    margin-top: calc(var(--entry-margin-top) * 0.65);
  }

  &:not(:first-of-type) {
    margin-top: var(--entry-margin-top);
  }

  @include mq(tabletL) {
    --entry-padding-default: 4.5rem;
    --entry-margin-top: calc(var(--entry-padding-default) * 0.8);
    --entry-padding-left: calc(var(--entry-padding-default) * 1.1);
  }

  @include mq(phoneM) {
    --entry-margin-top: calc(var(--entry-padding-default) * 0.5);
    --entry-padding-left: 0;
  }
}

.title {
  --title-font-size: calc(var(--entry-padding-default) * 0.3);
  --title-padding-top: calc(var(--entry-padding-default) * 0.18);

  padding: var(--title-padding-top) calc(var(--entry-padding-default) * 0.8) 0
    var(--entry-padding-left);
  font-size: var(--title-font-size);

  &::after {
    @include empty_pseudo_element;

    display: flex;
    align-items: center;

    width: calc(var(--entry-padding-default) * 0.5);
    height: calc(var(--title-padding-top) + var(--title-font-size) * 1.5);

    top: 0;
    right: 0;

    background: var(--arrow-down-icon) center no-repeat;
    background-size: contain;
  }

  .entry[open] > & {
    &::after {
      transform: rotate(180deg);
    }
  }
}

.content {
  padding-left: var(--entry-padding-left);
}

.indexContainer {
  position: absolute;

  height: 100%;

  top: 0;
  left: 0;

  @include mq(phoneM) {
    @include visually_hidden;
  }
}

.index {
  position: sticky;

  width: calc(var(--entry-padding-default) * 0.6);
  height: var(--entry-padding-default);

  top: var(--nav-height);

  font-size: calc(var(--entry-padding-default) * 0.5);
}

.list {
  counter-reset: singleIdea;

  padding: calc(var(--entry-padding-default) * 0.5) 0 calc(var(--entry-padding-default) * 0.3)
    calc(var(--entry-padding-default) * 0.6);
  list-style: none;
}

.listItem {
  padding-bottom: 1rem;

  &::before {
    position: absolute;
    content: counter(singleIdea) '.';

    left: calc(var(--entry-padding-default) * -0.5);
    top: 0;

    counter-increment: singleIdea;
  }
}
